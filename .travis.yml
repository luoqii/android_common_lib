anguage: java

env:
    matrix:
    - ANDROID_IMGS=sysimg-16            ANDROID_TARGET=android-16  ANDROID_ABI=armeabi-v7a
    - ANDROID_IMGS=sysimg-15            ANDROID_TARGET=android-16  ANDROID_ABI=armeabi-v7a
    - ANDROID_IMGS=sysimg-17            ANDROID_TARGET=android-17  ANDROID_ABI=armeabi-v7a

before_install:
    - sudo apt-get update -qq
    - if [ `uname -m` = x86_64 ] ; then sudo apt-get install -qq --force-yes libgd2-xpm ia32-libs ia32-libs-multiarch ; fi 

    - export ANDROID_SDK=android-sdk_r22.6-linux.tgz
    - wget http://dl.google.com/android/$ANDROID_SDK
    - tar -zxf $ANDROID_SDK 
    - export ANDROID_HOME=`pwd`/android-sdk-linux
    - export PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools

    # debug
    - android list target
    - android list sdk --extended 
    - android list sdk --extended --all

    - echo y | android update sdk --filter build-tools-19.0.3 --no-ui --force
    - echo y | android update sdk --filter platform-tools,build-tools-19.0.3,$ANDROID_TARGET,extra-android-support,$ANDROID_IMGS --no-ui --force
    - android list target
    - echo no | android create avd --force -n test -t $ANDROID_TARGET --abi $ANDROID_ABI
    # debug
    - android list avd
    - emulator -avd test -no-skin -no-audio -no-window &

# do this as later as possiable
#    - adb wait-for-device 
    - android update project -p . -t $ANDROID_TARGET

install:

script:
    - source  ./buildscript/lib/common.sh
    - set_as_lib_project . false
    - ant debug  

#    - adb wait-for-device 
    - wait_for_emulator

    - ant installd

    - cd test/unit
    - chmod a+x run_test.ant
    - adb devices
    - ./run_test.ant

    - cd ../..
    - cd test/uiautomator
    - chmod a+x run_test.sh
    - ./run_test.sh
